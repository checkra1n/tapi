import sys

## Autogenerated by LLVM/Clang configuration.
# Do not edit!
config.llvm_src_root = "@LLVM_SOURCE_DIR@"
config.llvm_obj_root = "@LLVM_BINARY_DIR@"
config.llvm_tools_dir = "@LLVM_TOOLS_DIR@"
config.llvm_libs_dir = "@LLVM_LIBS_DIR@"
config.lit_tools_dir = "@LLVM_LIT_TOOLS_DIR@"
config.tapi_obj_root = "@TAPI_BINARY_DIR@"
config.clang_src_root = "@CLANG_SOURCE_DIR@"
config.tapi_tools_dir = "@TAPI_TOOLS_DIR@"
config.llvm_use_sanitizer = "@LLVM_USE_SANITIZER@"
config.iosmac_support = "@LINKER_SUPPORTS_IOSMAC@"
config.i386_support = "@SDK_SUPPORTS_I386@"
config.python_executable = "@Python3_EXECUTABLE@"
config.host_compiler = "@CMAKE_C_COMPILER@"
config.apple_disclosure = "@APPLE_DISCLOSURE@"

# Support substitution of the tools and libs dirs with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_libs_dir = config.llvm_libs_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

# Add additional features for each additional supported platform.
for platform in "@LLVM_SUPPORTED_PLATFORMS@".split(';'):
    if platform:
        config.available_features.add('platform-' + platform)

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(config, "@TAPI_SOURCE_DIR@/test/lit.cfg.py")
